name: EVE SDE Converter

permissions:
  contents: write
  id-token: write

on:
  push:
    branches: [ master ]
  schedule:
    - cron: '0 0 */2 * *'  # Every 2 days at midnight UTC
  workflow_dispatch:  # Allow manual trigger

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  convert:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y sqlite3

    - name: Install tsx
      run: pnpm add -g tsx

    - name: Check if release exists
      id: check_release
      run: |
        BUILD_NUMBER=$(tsx src/index.ts check-update 2>&1 | grep "Latest build number:" | awk '{print $4}')
        COMMIT_SHA=$(git rev-parse --short HEAD)
        TAG_NAME="sde-${BUILD_NUMBER}-${COMMIT_SHA}"
        if gh release view "$TAG_NAME" >/dev/null 2>&1; then
          echo "Release $TAG_NAME already exists. Skipping."
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "Release $TAG_NAME does not exist. Proceeding."
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
        fi

    - name: Run conversion
      if: steps.check_release.outputs.exists == 'false'
      run: tsx src/index.ts convert

    - name: Compress MySQL dump
      if: steps.check_release.outputs.exists == 'false'
      run: bzip2 output/sde.sql

    - name: Create and upload release
      if: steps.check_release.outputs.exists == 'false'
      run: |
        TAG="sde-${{ steps.check_release.outputs.build_number }}-${{ steps.check_release.outputs.commit_sha }}"
        TITLE="EVE SDE Build ${{ steps.check_release.outputs.build_number }} (Commit ${{ steps.check_release.outputs.commit_sha }})"
        NOTES="Automated release for EVE SDE build ${{ steps.check_release.outputs.build_number }}

        Commit: ${{ steps.check_release.outputs.commit_sha }}

        Generated files:
        - sde.sql.bz2 (Compressed MySQL dump)
        - sde.sqlite (SQLite database)"
        gh release create "$TAG" --title "$TITLE" --notes "$NOTES" ./output/sde.sql.bz2 ./output/sde.sqlite